@page "/admin/manage-blog-posts/new"
@using Blazored.TextEditor

@rendermode @(new InteractiveServerRenderMode(prerender: false))

@inject IBlogPostAdminService BlogPostService
@inject ICategoryService CategoryService


@* <HeadContent>
<link href="//cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<link href="//cdn.quilljs.com/1.3.6/quill.bubble.css" rel="stylesheet">
</HeadContent>

<Microsoft.AspNetCore.Components.Sections.SectionContent SectionName="scripts">
<script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="_content/Blazored.TextEditor/quill-blot-formatter.min.js"></script>
<script src="_content/Blazored.TextEditor/Blazored-BlazorQuill.js"></script>
</Microsoft.AspNetCore.Components.Sections.SectionContent> *@

<AdminHeader Title="New Blog Post" />

@if (_isLoading)
{
    <Loader LoaderText="@_loadingText" />
}

<EditForm Model="_model">
    <DataAnnotationsValidator />
    <div class="row">
        <div class="col-md-6">
            <div class="mb-3">
                <label for="Title" class="form-label">Title</label>
                <InputText id="Title" class="form-control form-control-sm" @bind-Value="_model.Title"
                    placeholder="Blog post title" />
                <ValidationMessage For="@(() => _model.Title)" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Title" class="form-label">Category</label>
                <InputSelect id="Title" class="form-control form-control-sm" @bind-Value="_model.CategoryId">
                    <option value="0">Select Category</option>
                    @foreach (var category in _categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => _model.CategoryId)" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Title" class="form-label">Introduction</label>
                <InputText id="Title" class="form-control form-control-sm" @bind-Value="_model.Introduction"
                    placeholder="Blog post introduction" />
                <ValidationMessage For="@(() => _model.Introduction)" class="text-danger" />
            </div>
            <div class="mb-3">
                <label for="Image" class="form-label d-block">Upload Image</label>
                <InputFile />
            </div>
            <div class="mb-3">
                <label class="form-label ml-3">
                    <InputCheckbox @bind-Value="_model.IsFeatured" class="form-check-input" />
                    Featured
                </label>
            </div>
            <div class="mb-3">
                <label class="form-label ml-3">
                    <InputCheckbox @bind-Value="_model.IsPublished" class="form-check-input" />
                    Published
                </label>
            </div>
            <div class="mb-3">
                <button type="submit" class="btn btn-success">Save</button>
            </div>
        </div>
        <div class="col-md-6 d-flex">
            <div class="mb-3 flex-grow-1 pb-5">
                <label for="Content" class="form-label">Content</label>
                <BlazoredTextEditor @ref="_quillHmtl" Placeholder="Enter content...">
                    <ToolbarContent>
                        <select class="ql-header">
                            <option selected=""></option>
                            <option value="1"></option>
                            <option value="2"></option>
                            <option value="3"></option>
                            <option value="4"></option>
                            <option value="5"></option>
                        </select>
                        <span class="ql-formats">
                            <button class="ql-bold"></button>
                            <button class="ql-italic"></button>
                            <button class="ql-underline"></button>
                            <button class="ql-strike"></button>
                        </span>
                        <span class="ql-formats">
                            <select class="ql-color"></select>
                            <select class="ql-background"></select>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-list" value="ordered"></button>
                            <button class="ql-list" value="bullet"></button>
                        </span>
                        <span class="ql-formats">
                            <button class="ql-link"></button>
                        </span>
                    </ToolbarContent>
                    <EditorContent>
                        @((MarkupString)_model.Content)
                    </EditorContent>
                </BlazoredTextEditor>
                <ValidationMessage For="@(() => _model.Content)" />
            </div>
        </div>
    </div>
</EditForm>

@code {

    private bool _isLoading;
    private string _loadingText;
    private BlogPost _model = new();
    private List<Category> _categories = new();

    private BlazoredTextEditor _quillHmtl;

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _loadingText = "Loading categories...";

        _categories = await CategoryService.GetCategoriesAsync();
        _isLoading = false;
    }
}